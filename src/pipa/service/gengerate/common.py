import questionary
from pipa.export_config.cpu_config import get_cpu_cores
from rich import print
from io import TextIOWrapper
import os


def ask_number(question: str, default: int) -> int:
    """
    Asks the user to input a number based on the given question and default value.

    Args:
        question (str): The question to ask the user.
        default (int): The default value to return if the user doesn't input anything.

    Returns:
        int: The number inputted by the user or the default value.
    """
    result = questionary.text(question).ask().strip()
    if result == "":
        return default
    elif result.isdigit():
        return int(result)
    else:
        print("Please input a number.")
        exit(1)


CORES_ALL = get_cpu_cores()


def quest_basic():
    workspace = questionary.text(
        "Where do you want to store your data? (Default: ./)\n"
    ).ask()

    if workspace == "":
        workspace = "./"

    if not os.path.exists(workspace):
        os.makedirs(workspace)

    freq_record = ask_number("What's the frequency of perf-record? (Default: 99)\n", 99)

    freq_stat = ask_number("What's the frequency of perf-stat? (Default: 99)\n", 99)

    return workspace, freq_record, freq_stat


def write_title(file: TextIOWrapper):
    file.write(
        """
#!/bin/bash
# The script generated by PIPA-TREE is used to collect performance data. 
# Please check whether it meets expectations before running.
# ZJU SPAIL(https://github.com/ZJU-SPAIL) reserves all rights.

# Check if sar and perf are available
if ! command -v sar &> /dev/null; then
echo "sar command not found. Please install sar."
exit 1
fi

if ! command -v perf &> /dev/null; then
echo "perf command not found. Please install perf."
exit 1
fi\n\n"""
    )
